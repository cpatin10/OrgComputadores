function Barco.new 1
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 4
pop this 8
push constant 0
pop this 6
push argument 2
pop this 0
push this 0
call Array.new 1
pop this 7
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 7
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 3
pop this 1
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop this 2
push argument 1
push this 0
sub
push constant 1
add
pop this 3
push argument 0
pop this 4
push argument 1
push constant 1
add
pop this 5
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
pop this 2
push argument 1
pop this 3
push argument 0
pop this 4
push argument 1
push this 0
add
pop this 5
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
pop this 2
push argument 1
pop this 3
push argument 0
push this 0
add
pop this 4
push argument 1
pop this 5
label IF_FALSE2
push this 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push this 0
sub
push constant 1
add
pop this 2
push argument 1
pop this 3
push argument 0
push constant 1
add
pop this 4
push argument 1
pop this 5
label IF_FALSE3
push this 4
push constant 6
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push this 4
push constant 5
sub
sub
pop this 2
push constant 5
pop this 4
label IF_FALSE4
push this 5
push constant 6
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
push this 5
push constant 5
sub
sub
pop this 3
push constant 5
pop this 5
label IF_FALSE5
push this 2
push constant 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
pop this 2
push this 4
push this 0
push this 2
sub
add
pop this 4
label IF_FALSE6
push this 3
push constant 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
pop this 3
push this 5
push this 0
push this 3
sub
add
pop this 5
label IF_FALSE7
push pointer 0
return
function Barco.verificaDisparo 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push this 2
push argument 1
gt
not
push argument 1
push this 4
lt
and
push this 3
push argument 2
eq
and
push argument 2
push this 5
eq
and
push this 2
push argument 1
eq
push argument 1
push this 4
eq
and
push this 3
push argument 2
gt
not
and
push argument 2
push this 5
lt
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 1
eq
push this 1
push constant 2
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 2
push this 3
sub
pop local 0
goto IF_END1
label IF_FALSE1
push argument 1
push this 2
sub
pop local 0
label IF_END1
push local 0
push this 7
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Barco.verificaHundido 1
pop temp 0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Barco.verificaHundido 1
push argument 0
pop pointer 0
push constant 0
not
pop this 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push this 6
push local 0
push this 7
add
pop pointer 1
push that 0
and
pop this 6
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Barco.getEstoyHundido 0
push argument 0
pop pointer 0
push this 6
return
function Barco.inicialX 0
push argument 0
pop pointer 0
push this 2
return
function Barco.inicialY 0
push argument 0
pop pointer 0
push this 3
return
function Barco.finalX 0
push argument 0
pop pointer 0
push this 4
return
function Barco.finalY 0
push argument 0
pop pointer 0
push this 5
return
function Barco.getMarca 0
push argument 0
pop pointer 0
push this 8
return
function Barco.seCruza 0
push argument 0
pop pointer 0
push argument 1
call Barco.inicialX 1
push this 4
lt
push argument 1
call Barco.inicialX 1
push argument 1
call Barco.finalX 1
eq
and
push this 2
push argument 1
call Barco.inicialX 1
gt
not
and
push this 2
push argument 1
call Barco.finalX 1
lt
push this 2
push this 4
eq
and
push argument 1
call Barco.inicialX 1
push this 2
gt
not
and
or
push this 2
push argument 1
call Barco.inicialX 1
gt
not
push argument 1
call Barco.inicialX 1
push this 4
gt
not
and
push this 4
push argument 1
call Barco.finalX 1
gt
not
and
push this 5
push argument 1
call Barco.finalY 1
eq
and
or
push argument 1
call Barco.inicialX 1
push this 2
gt
not
push this 2
push argument 1
call Barco.finalX 1
gt
not
and
push argument 1
call Barco.finalX 1
push this 4
gt
not
and
push this 5
push argument 1
call Barco.finalY 1
eq
and
or
push this 3
push argument 1
call Barco.inicialY 1
gt
not
push argument 1
call Barco.inicialY 1
push this 5
gt
not
and
push this 5
push argument 1
call Barco.finalY 1
gt
not
and
push this 4
push argument 1
call Barco.finalX 1
eq
and
or
push argument 1
call Barco.inicialY 1
push this 3
gt
not
push this 3
push argument 1
call Barco.finalY 1
gt
not
and
push argument 1
call Barco.finalY 1
push this 5
gt
not
and
push this 4
push argument 1
call Barco.finalX 1
eq
and
or
push pointer 0
push argument 1
call Barco.compararBarco 2
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Barco.compararBarco 0
push argument 0
pop pointer 0
push this 2
push argument 1
call Barco.inicialX 1
eq
push this 3
push argument 1
call Barco.inicialY 1
eq
and
push this 4
push argument 1
call Barco.finalX 1
eq
and
push this 5
push argument 1
call Barco.finalY 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Barco.dispose 0
push argument 0
pop pointer 0
push this 7
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
